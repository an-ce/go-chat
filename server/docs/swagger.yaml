definitions:
  serviceAuth.tLoginRes:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      token:
        type: string
      username:
        type: string
    type: object
  serviceAuth.tVerifyEmailRes:
    properties:
      email:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /check-auth:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: Check Auth
      tags:
      - Auth
  /contacts/:userId:
    delete:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Delete Contacts
      tags:
      - Contacts
  /contacts/apply:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: ApplyContacts
      tags:
      - Contacts
  /contacts/list:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Get Contacts List
      tags:
      - Contacts
  /contracts/:userId:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: AddContacts
      tags:
      - Contacts
  /forgot-password:
    post:
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: go to check your email
          schema:
            type: string
      summary: Send verification code to email
      tags:
      - Auth
  /group:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Desc
        in: body
        name: desc
        schema:
          type: string
      - description: OwnerId
        in: body
        name: ownerId
        required: true
        schema:
          type: integer
      - description: MemberIds
        in: body
        name: memberIds
        required: true
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: CreateGroup
      tags:
      - Group
  /group/:groupId:
    delete:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: ID
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: DeleteGroup
      tags:
      - Group
  /group/exit/:groupId:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: ID
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: ExitGroup
      tags:
      - Group
  /group/list:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: GetGroupList
      tags:
      - Group
  /login:
    post:
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serviceAuth.tLoginRes'
      summary: Login
      tags:
      - Auth
  /logout:
    post:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Logout
      tags:
      - Auth
  /reset-password:
    post:
      parameters:
      - description: Toke
        in: path
        name: token
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Confirmation
        in: formData
        name: confirmation
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: ResetPassword
      tags:
      - Auth
  /sign-up:
    post:
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Password Confirmation
        in: formData
        name: confirmation
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Sign up
      tags:
      - Auth
  /upload:
    post:
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Upload
      tags:
      - Static
  /user/page:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: PageNo
        in: query
        name: page_no
        required: true
        type: integer
      - description: PageSize
        in: query
        name: page_size
        required: true
        type: integer
      - description: Username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: UserPage
      tags:
      - User
  /verify-email:
    post:
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Code
        in: formData
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serviceAuth.tVerifyEmailRes'
      summary: Submit verification code
      tags:
      - Auth
swagger: "2.0"
